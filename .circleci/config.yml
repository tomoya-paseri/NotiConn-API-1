jobs:
  setup:
    working_directory: ~/workspace
    docker:
      - image: circleci/node:lts
    steps:
      - checkout # ソースコードを作業ディレクトリにチェックアウトする特別なステップ
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # 依存関係キャッシュを復元する特別なステップ
          # 依存関係キャッシュについては https://circleci.com/docs/ja/2.0/caching/ をお読みください
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm
          command: npm install
      - run:
          name: install-yarn
          command: npm install yarn
      - save_cache: # 依存関係キャッシュを保存する特別なステップ
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: create-config-slack
          command: sh ./serverless/script/slack.sh
      - run:
          name: create-config-map
          command: sh ./serverless/script/map.sh
      - persist_to_workspace:
          root: . # workspaceのrootパス（絶対パスかworking_directoryからの相対パス）
          paths:
            - . # 共有するパス（絶対パスかrootからの相対パス）
  test:
    working_directory: ~/workspace
    docker:
      - image: node:9.4.0
    steps:
      - attach_workspace: # workspaceをアタッチする
          at: .
      - run:
          name: test
          command: npm run test
  deploy-prd:
    working_directory: ~/workspace
    docker:
      - image: node:9.4.0
    steps:
      - attach_workspace: # workspaceをアタッチする
          at: .
      - run:
          name: set-credentials
          command: sh ./serverless/script/credentials.sh noticonn
      - run:
          name: deploy-prd
          command: make deploy-prd
  deploy-dev:
    working_directory: ~/workspace
    docker:
      - image: node:9.4.0
    steps:
      - attach_workspace: # workspaceをアタッチする
          at: .
      - run:
          name: set-credentials
          command: sh ./serverless/script/credentials.sh noticonn-dev
      - run:
          name: deploy-dev
          command: make deploy-dev
workflows:
  version: 2
  approval-deploy-with-serverless:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - request-deploy:
          type: approval  # approvalを設定したjob
          filters:
            branches:
              only:
                - master
                - develop
          requires:
            - test
      - deploy-prd:
          filters:
            branches:
              only: master
          requires:
            - request-deploy
      - deploy-dev:
          filters:
            branches:
              only: develop
          requires:
            - request-deploy
